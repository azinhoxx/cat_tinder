name: Auto Release Flutter

permissions:
  contents: write

on: 
  push:
    branches:
      - main
  
jobs:
  build-android-apk:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Create .env file with secrets
        run: |
          echo "CATS_API=https://api.thecatapi.com/v1/images/search?limit=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}&api_key=${{ secrets.CATS_API_KEY }}&has_breeds=1" >> .env
          echo "CATS_API_KEY=${{ secrets.CATS_API_KEY }}" >> .env
          echo "CATS_SLIDES_FETCH_LIMIT=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}" >> .env  

      - name: Current Flutter version
        id: flutter-version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get
        
      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build-android-appbundle:
    name: Build Android AppBundle
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Create .env file with secrets
        run: |
          echo "CATS_API=https://api.thecatapi.com/v1/images/search?limit=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}&api_key=${{ secrets.CATS_API_KEY }}&has_breeds=1" >> .env
          echo "CATS_API_KEY=${{ secrets.CATS_API_KEY }}" >> .env
          echo "CATS_SLIDES_FETCH_LIMIT=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}" >> .env    

      - name: Current Flutter version
        id: flutter-version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Build AppBundle
        run: flutter build appbundle --release   

      - name: Upload AppBundle
        uses: actions/upload-artifact@v4
        with:
          name: android-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  build-android-apk-split:
    name: Build Android Split APKs
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Create .env file with secrets
        run: |
          echo "CATS_API=https://api.thecatapi.com/v1/images/search?limit=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}&api_key=${{ secrets.CATS_API_KEY }}&has_breeds=1" >> .env
          echo "CATS_API_KEY=${{ secrets.CATS_API_KEY }}" >> .env
          echo "CATS_SLIDES_FETCH_LIMIT=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}" >> .env    

      - name: Current Flutter version
        id: flutter-version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Build Split APKs
        run: flutter build apk --release --split-per-abi

      - name: Upload Split APKs
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-split
          path: |
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk

  build-web:
    name: Build Web
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Create .env file with secrets
        run: |
          echo "CATS_API=https://api.thecatapi.com/v1/images/search?limit=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}&api_key=${{ secrets.CATS_API_KEY }}&has_breeds=1" >> .env
          echo "CATS_API_KEY=${{ secrets.CATS_API_KEY }}" >> .env
          echo "CATS_SLIDES_FETCH_LIMIT=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}" >> .env

      - name: Current Flutter version
        id: flutter-version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get
        
      - name: Build Web
        run: flutter build web

      - name: Upload Web
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web/

  build-windows-portable:
    name: Build Windows Portable
    runs-on: windows-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable

    - name: Create .env file with secrets
      run: |
        echo "CATS_API=${{ secrets.CATS_API }}" >> .env
        echo "CATS_API_KEY=${{ secrets.CATS_API_KEY }}" >> .env
        echo "CATS_SLIDES_FETCH_LIMIT=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}" >> .env
        

    - name: Current Flutter version
      id: flutter-version
      run: flutter --version

    - name: Install dependencies
      run: flutter pub get

    - name: Build Windows
      run: flutter build windows

    - name: Upload Windows Build
      uses: actions/upload-artifact@v4
      with:
        name: windows-portable
        path: build/windows/x64/runner/Release/

  build-windows-installer:
    name: Build Windows Installer
    runs-on: windows-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Create .env file with secrets
        run: |
          echo "CATS_API=https://api.thecatapi.com/v1/images/search?limit=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}&api_key=${{ secrets.CATS_API_KEY }}&has_breeds=1" >> .env
          echo "CATS_API_KEY=${{ secrets.CATS_API_KEY }}" >> .env
          echo "CATS_SLIDES_FETCH_LIMIT=${{ secrets.CATS_SLIDES_FETCH_LIMIT }}" >> .env

      - name: Current Flutter version
        id: flutter-version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Install winget
        uses: Cyberboss/install-winget@v1

      - name: Install InnoSetup
        run: winget install --source winget --id JRSoftware.InnoSetup --exact --accept-source-agreements --accept-package-agreements

      - name: Build Windows
        run: dart run inno_bundle:build --release

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: build/windows/x64/installer/Release/*.exe

  release:
    needs: [build-android-apk, build-android-appbundle, build-android-apk-split, build-web, build-windows-portable, build-windows-installer]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: release/android/

      - name: Download Android AppBundle
        uses: actions/download-artifact@v4
        with:
          name: android-appbundle
          path: release/android/

      - name: Download Split APKs
        uses: actions/download-artifact@v4
        with:
          name: android-apk-split
          path: release/android/split/

      - name: Download Web Build
        uses: actions/download-artifact@v4
        with:
          name: web
          path: release/web/

      - name: Download Windows Portable
        uses: actions/download-artifact@v4
        with:
          name: windows-portable
          path: release/windows/portable/

      - name: Download Windows Installer
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: release/windows/installer/

      - name: Create zip archive of Windows portable folder
        run: |
          zip -r release/windows/portable-windows.zip release/windows/portable

      - name: Create zip archive of Web folder
        run: |
          zip -r release/web.zip release/web     

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.1
          files: |
            release/android/split/app-arm64-v8a-release.apk
            release/android/split/app-armeabi-v7a-release.apk
            release/android/split/app-x86_64-release.apk
            release/android/app-release.aab
            release/android/app-release.apk
            release/windows/portable-windows.zip
            release/windows/installer/*.exe
            release/web.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}